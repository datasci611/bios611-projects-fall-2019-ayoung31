predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="lightseagreen", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Predicted Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
ggsave("predictedBigs.png", bigPlot)
#predict number of clothing items based on weekday
clothes <- lm(totclothes ~ as.factor(weekdayNum), dailyVals)
predClothes <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(clothes, new, interval="confidence", level=.95))
colnames(predClothes) <- c("Weekday", "Predicted", "Lower", "Upper")
clothesPlot <- ggplot(predClothes, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="lightseagreen", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Predicted Number Clothing Items Distributed on each Day of the Week", x="Day of the Week", y="Number of Clothing Items")
ggsave("predictedClothes.png", clothesPlot)
### Useful visualizations ###
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500, numBig < 15), aes(x=numBig, y=totPounds))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
ggsave("poundsVnumLarge.png", lbsVbig)
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=numBig, y=totclothes))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
ggsave("clothesVnumLarge.png", cloVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
ggsave("clothesVpoundsVnumBig.png", cloVlbsVbig)
x <- tapply(dailyVals$totPounds, dailyVals$weekday, mean, na.rm=TRUE)
y <- c("Friday","Monday","Saturday","Sunday","Thursday","Tuesday","Wednesday")
df <- data.fram(x,y)
df <- data.frame(x,y)
colnames(df) <- c("day", "mean")
ggplot(df, aes(x=day, y=mean))+
geom_bar(stat="identity")+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
df <- data.frame(y,x)
colnames(df) <- c("day", "mean")
ggplot(df, aes(x=day, y=mean))+
geom_bar(stat="identity")+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato2", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
library(ggplot2)
library(tidyverse)
### DATA IMPORT ###
df <- read_tsv("C:/Users/amyou/Documents/GitHub/bios611-projects-fall-2019-ayoung31/project_1/data/UrbanMinistriesData.tsv") %>%
select(c(1,6,7,8)) #only include variables of interest
colnames(df) <- c('dateChar', 'FoodProvidedFor', 'foodPounds', 'clothing')
### INITIAL DATA CLEANING AND NEW VARIABLE CREATION ###
df <- df %>%
mutate(date = as.Date(dateChar, "%m/%d/%Y")) %>% #Properly format date variable
select(-dateChar) %>% #drop the character format date
mutate(year=format(date, "%Y")) %>% #extract year from date
filter(year > 1983 & year < 2020) %>% #remove invalid years
mutate(week=cut(date, breaks = "week")) %>% #create week variable
filter(foodPounds < 450121) %>% #remove outlier from pounds of food
mutate(bigFam = FoodProvidedFor > 4) %>% #create indicator for large families
mutate(weekday = weekdays(date)) %>% #create day of week variable (mon-sun)
mutate(weekdayNum = as.numeric(format(date, "%u"))) #create numeric day of week (1-7, mon=1)
weeklyVals <- df %>%
group_by(week) %>%
summarize(totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE))
dailyVals <- df %>%
group_by(date, weekday, weekdayNum) %>%
summarize(numBig=sum(bigFam, na.rm=TRUE), totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE))
### Weekly analysis ###
#On average, how many pounds of food do they distribute per week?
avgWeekLbs <- mean(weeklyVals$totPounds)
confLbs <- t.test(weeklyVals$totPounds, conf.level=.95)$conf.int
#On average, how many clothing items do they distribute per week?
avgWeekClo <- mean(weeklyVals$totclothes)
confClo <- t.test(weeklyVals$totclothes, conf.level=.95)$conf.int
### Weekday Analysis ###
#Predict Pounds of Food based on Weekday
poundsDay <- lm(totPounds ~ as.factor(weekdayNum), dailyVals)
new <- data.frame(c(1,2,3,4,5))
colnames(new) <- "weekdayNum"
predicted <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(poundsDay, new, interval="confidence", level=.95))
colnames(predicted) <- c("Weekday", "Predicted", "Lower", "Upper")
lbsPlot <- ggplot(predicted, aes(x=Weekday, y=Predicted))+
geom_bar(stat="identity", fill="lightseagreen", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Pounds of Food Distributed on each Day of the Week", y="Pounds of Food", x="Day of the Week")
ggsave("predictedPounds.png", lbsPlot)
#predict number of large families based on weekday
large <- lm(numBig ~ as.factor(weekdayNum), data=dailyVals)
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato2", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
ggsave("predictedBigs.png", bigPlot)
#predict number of clothing items based on weekday
clothes <- lm(totclothes ~ as.factor(weekdayNum), dailyVals)
predClothes <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(clothes, new, interval="confidence", level=.95))
colnames(predClothes) <- c("Weekday", "Predicted", "Lower", "Upper")
clothesPlot <- ggplot(predClothes, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="plum4", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number Clothing Items Distributed on each Day of the Week", x="Day of the Week", y="Number of Clothing Items")
ggsave("predictedClothes.png", clothesPlot)
### Useful visualizations ###
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500, numBig < 15), aes(x=numBig, y=totPounds))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
ggsave("poundsVnumLarge.png", lbsVbig)
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=numBig, y=totclothes))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
ggsave("clothesVnumLarge.png", cloVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
ggsave("clothesVpoundsVnumBig.png", cloVlbsVbig)
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
ggsave("predictedBigs.png", bigPlot)
table(dailyVals$weekday)
table(dailyVals$weekday)
data.frame(table(dailyVals$weekday))
df <- data.frame(table(dailyVals$weekday))
df <- read_tsv("C:/Users/amyou/Documents/GitHub/bios611-projects-fall-2019-ayoung31/project_1/data/UrbanMinistriesData.tsv") %>%
select(c(1,6,7,8)) #only include variables of interest
colnames(df) <- c('dateChar', 'FoodProvidedFor', 'foodPounds', 'clothing')
df <- df %>%
mutate(date = as.Date(dateChar, "%m/%d/%Y")) %>% #Properly format date variable
select(-dateChar) %>% #drop the character format date
mutate(year=format(date, "%Y")) %>% #extract year from date
filter(year > 1983 & year < 2020) %>% #remove invalid years
mutate(week=cut(date, breaks = "week")) %>% #create week variable
filter(foodPounds < 450121) %>% #remove outlier from pounds of food
mutate(bigFam = FoodProvidedFor > 4) %>% #create indicator for large families
mutate(weekday = weekdays(date)) %>% #create day of week variable (mon-sun)
mutate(weekdayNum = as.numeric(format(date, "%u"))) #create numeric day of week (1-7, mon=1)
weeklyVals <- df %>%
group_by(week) %>%
summarize(totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE))
dailyVals <- df %>%
group_by(date, weekday, weekdayNum) %>%
summarize(numBig=sum(bigFam, na.rm=TRUE), totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE))
freqs <- data.frame(table(dailyVals$weekday))
colnames(freqs) <- c("day", "freq")
predicted <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(poundsDay, new, interval="confidence", level=.95)/freqs$freq)
freqs <- filter(freqs, day != "Sunday" & day != "Saturday")
predicted <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(poundsDay, new, interval="confidence", level=.95)/freqs$freq)
freqs
predict(poundsDay, new, interval="confidence", level=.95)
arrange(match(day, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")))
freqs <- freqs %>%
filter(day != "Sunday" & day != "Saturday") %>%
arrange(match(day, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")))
freqs
predicted <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(poundsDay, new, interval="confidence", level=.95)/freqs$freq)
colnames(predicted) <- c("Weekday", "Predicted", "Lower", "Upper")
lbsPlot <- ggplot(predicted, aes(x=Weekday, y=Predicted))+
geom_bar(stat="identity", fill="lightseagreen", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Pounds of Food Distributed on each Day of the Week", y="Pounds of Food", x="Day of the Week")
lbsPlot
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95)/freqs$freq)
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
bigPlot
predClothes <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(clothes, new, interval="confidence", level=.95)/freqs$freq)
colnames(predClothes) <- c("Weekday", "Predicted", "Lower", "Upper")
clothesPlot <- ggplot(predClothes, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="plum4", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number Clothing Items Distributed on each Day of the Week", x="Day of the Week", y="Number of Clothing Items")
clothesPlot
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95)/freqs$freq)
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Number of Large Families on each Day of the Week", x="Day of the Week", y="Number of Large Families (>4)")
ggsave("predictedBigs.png", bigPlot)
bigPlot
visitors <- dailyVals %>% filter(totPounds>0 | totclothes > 0)
freqs <- data.frame(table(visitors$weekday))
colnames(freqs) <- c("day", "freq")
freqs <- freqs %>%
filter(day != "Sunday" & day != "Saturday" ) %>%
arrange(match(day, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")))
#predict number of large families based on weekday
large <- lm(numBig ~ as.factor(weekdayNum), data=dailyVals)
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95)/freqs$freq)
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Proportion of Large Families on each Day of the Week", x="Day of the Week", y="Proportion of Large Families (>4)")
bigPlot
visitors <- df %>% filter(foodPounds > 0 | clothing > 0)
freqs <- data.frame(table(visitors$weekday))
colnames(freqs) <- c("day", "freq")
freqs <- freqs %>%
filter(day != "Sunday" & day != "Saturday" ) %>%
arrange(match(day, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")))
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95)/freqs$freq)
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Proportion of Large Families on each Day of the Week", x="Day of the Week", y="Proportion of Large Families (>4)")
bigPlot
ggsave("predictedBigs.png", bigPlot)
table(visitors$weekday)
visitors <- df %>%
group_by(day) %>%
summarise(count = n())
visitors <- df %>%
group_by(date) %>%
summarise(count = n())
View(visitors)
dailyVals <- df %>%
group_by(date, weekday, weekdayNum) %>%
summarize(numBig=sum(bigFam, na.rm=TRUE), totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE),visitors=n())
df <- read_tsv("C:/Users/amyou/Documents/GitHub/bios611-projects-fall-2019-ayoung31/project_1/data/UrbanMinistriesData.tsv") %>%
select(c(1,6,7,8)) #only include variables of interest
colnames(df) <- c('dateChar', 'FoodProvidedFor', 'foodPounds', 'clothing')
df <- df %>%
mutate(date = as.Date(dateChar, "%m/%d/%Y")) %>% #Properly format date variable
select(-dateChar) %>% #drop the character format date
mutate(year=format(date, "%Y")) %>% #extract year from date
filter(year > 1983 & year < 2020) %>% #remove invalid years
mutate(week=cut(date, breaks = "week")) %>% #create week variable
filter(foodPounds < 450121) %>% #remove outlier from pounds of food
mutate(bigFam = FoodProvidedFor > 4) %>% #create indicator for large families
mutate(weekday = weekdays(date)) %>% #create day of week variable (mon-sun)
mutate(weekdayNum = as.numeric(format(date, "%u"))) #create numeric day of week (1-7, mon=1)
weeklyVals <- df %>%
group_by(week) %>%
summarize(totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE))
dailyVals <- df %>%
group_by(date, weekday, weekdayNum) %>%
summarize(numBig=sum(bigFam, na.rm=TRUE), totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE),visitors=n())
dailyVals <- df %>%
group_by(date, weekday, weekdayNum) %>%
summarize(numBig=sum(bigFam, na.rm=TRUE), totPounds=sum(foodPounds, na.rm=TRUE),totclothes=sum(clothing, na.rm=TRUE),visitors=n()) %>%
mutate(propBig = numBig/visitors)
View(dailyVals)
#predict proportion of large families based on weekday
large <- lm(propBig ~ as.factor(weekdayNum), data=dailyVals)
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
#predict proportion of large families based on weekday
large <- lm(propBig ~ as.factor(weekdayNum), data=dailyVals)
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
new <- data.frame(c(1,2,3,4,5))
colnames(new) <- "weekdayNum"
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Proportion of Large Families on each Day of the Week", x="Day of the Week", y="Proportion of Large Families (>4)")
bigPlot
ggsave("predictedBigs.png", bigPlot)
#predict proportion of large families based on weekday
large <- lm(propBig ~ as.factor(weekdayNum), data=dailyVals)
predictBig <- data.frame(c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), predict(large, new, interval="confidence", level=.95))
colnames(predictBig) <- c("Weekday", "Predicted")
bigPlot <- ggplot(predictBig, aes(x=Weekday, y=Predicted, group=1))+
geom_bar(stat="identity", fill="tomato1", color="black")+
theme_classic()+
scale_x_discrete(limits=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))+
labs(title="Average Proportion of Large Families on each Day of the Week", x="Day of the Week", y="Proportion of Large Families (>4)")
bigPlot
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500, numBig < 15), aes(x=numBig, y=totPounds))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="tomato1")+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
lbsVbig
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500, numBig < 15), aes(x=numBig, y=totPounds))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="tomato1")+
theme_classic()+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
lbsVbig
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500, numBig < 15), aes(x=numBig, y=totPounds))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="plum4")+
theme_classic()+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
lbsVbig
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=numBig, y=totclothes))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="plum4")+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
cloVbig
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=numBig, y=totclothes))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="plum4")+
theme_classic()+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
cloVbig
ggsave("poundsVnumLarge.png", lbsVbig)
ggsave("clothesVnumLarge.png", cloVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig), color="tomato1")+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_brewer(palette="Oranges")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(palette="Oranges")
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(from="tomato1", to="salmon1")
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(colors=c("tomato1", "salmon1"))
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(colors=c("tomato1", "salmon1"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(colors=c("tomato1", "lightsalmon1"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Number of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families\nin a Day", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
ggsave("clothesVpoundsVnumBig.png", cloVlbsVbig)
ggsave("clothesVnumLarge.png", cloVbig)
ggsave("poundsVnumLarge.png", lbsVbig)
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=numBig, y=totclothes))+
geom_point(color="plum4")+
geom_smooth(method=lm, se=F, color="lightseagreen")+
theme_classic()+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
ggsave("clothesVnumLarge.png", cloVbig)
setwd("~/GitHub/bios611-projects-fall-2019-ayoung31/project_1/results")
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, numBig <15), aes(x=propBig, y=totclothes))+
geom_point(color="plum4")+
geom_smooth(method=lm, se=F, color="lightseagreen")+
theme_classic()+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
cloVbig
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, propBig<1), aes(x=propBig, y=totclothes))+
geom_point(color="plum4")+
geom_smooth(method=lm, se=F, color="lightseagreen")+
theme_classic()+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
cloVbig
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500 & propBig < 1), aes(x=numBig, y=totPounds))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="plum4")+
theme_classic()+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
lbsVbig
# foodPounds v. big families
lbsVbig <- ggplot(filter(dailyVals, totPounds<1500 & propBig < 1), aes(x=propBig, y=totPounds))+
geom_point(color="lightseagreen")+
geom_smooth(method=lm, se=F, color="plum4")+
theme_classic()+
labs(title="Daily Pounds of Food Distributed vs. Number of Large Families", y="Daily Total Pounds of Food", x="Number of Large Families in a Day")
lbsVbig
cloVbig
# clothing v big families
cloVbig <- ggplot(filter(dailyVals, propBig<1), aes(x=numBig, y=totclothes))+
geom_point(color="plum4")+
geom_smooth(method=lm, se=F, color="lightseagreen")+
theme_classic()+
labs(title="Daily Number of Clothes Distributed vs. Number of Large Families", x="Number of Large Families in a Day", y="Daily Total Number of Clothes")
cloVbigd
cloVbig
ggsave("poundsVnumLarge.png", lbsVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("plum4", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("plum4", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
ggsave("clothesVpoundsVnumBig.png", cloVlbsVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Number Clothes Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Pounds of food Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
cloVlbsVbig
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=numBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Pounds of food Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
ggsave("clothesVpoundsVnumBig.png", cloVlbsVbig)
#clothing v totPounds v numBig
cloVlbsVbig <- ggplot(filter(dailyVals, totPounds < 1500 & totclothes > 0 & totPounds > 0 & numBig <= 15), aes(x=totPounds, y=totclothes))+
geom_point(aes(color=propBig))+
theme_classic()+
scale_color_gradientn(colors=c("tomato1", "white"))+
labs(title="Daily Number of Clothes Distributed vs. Pounds of food Distributed", color="Proportion of\nLarge Families", y="Daily Total Number of Clothes", x="Daily Total Pounds of Food")
